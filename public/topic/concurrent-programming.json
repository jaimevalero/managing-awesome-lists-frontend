{"category_type":"topic","category_name":"concurrent-programming","repos_data":[{"full_name":"taskflow/taskflow","description":"A General-purpose Task-parallel Programming System using Modern C++","topics":["parallel-programming","threadpool","concurrent-programming","high-performance-computing","multicore-programming","multi-threading","taskparallelism","multithreading","parallel-computing","work-stealing"],"created_at":"2018-04-18T13:45:30Z","pushed_at":"2024-12-01T01:38:28Z","stargazers_count":10296,"language":"C++"},{"full_name":"Stiffstream/sobjectizer","description":"An implementation of Actor, Publish-Subscribe, and CSP models in one rather small C++ framework. With performance, quality, and stability proved by years in the production.","topics":["cpp","cplusplus","cplusplus-17","actor-model","actors","actor-framework","actor-library","multithreading","concurrency","concurrent-programming"],"created_at":"2019-05-16T08:45:51Z","pushed_at":"2024-11-30T14:09:33Z","stargazers_count":495,"language":"Makefile"},{"full_name":"volodymyrprokopyuk/go-blockchain","description":"The foundational and practical guide for effectively learning and progressively building a blockchain from scratch in Go with gRPC","topics":["blockchain","blockchain-from-scratch","concurrent-programming","cryptography","golang","peer-to-peer-networking","grpc-go","blockchain-protocol","merkle-proof","merkle-tree"],"created_at":"2024-08-31T05:29:04Z","pushed_at":"2024-11-10T10:02:40Z","stargazers_count":264,"language":"Go"},{"full_name":"vladopajic/go-actor","description":"A lightweight library for writing concurrent programs in Go using the Actor model.","topics":["actor","go-actor","concurrency","concurrent-programming","go","golang"],"created_at":"2022-08-16T10:31:52Z","pushed_at":"2024-11-25T16:57:24Z","stargazers_count":161,"language":"Makefile"},{"full_name":"hamed-yousefi/gowl","description":"Gowl is a process management and process monitoring tool at once. An infinite worker pool gives you the ability to control the pool and processes and monitor their status.","topics":["golang","go","pooling","pool","worker-pool","monitor","monitoring","monitoring-tool","concurrent-programming","concurrency"],"created_at":"2021-04-12T19:15:53Z","pushed_at":"2023-10-19T07:56:42Z","stargazers_count":69,"language":"Go"}],"frecuent_topics":{"concurrent-programming":5,"concurrency":3,"golang":3,"multithreading":2,"go":2}}