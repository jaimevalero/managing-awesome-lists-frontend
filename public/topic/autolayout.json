{"category_type":"topic","category_name":"autolayout","repos_data":[{"full_name":"SnapKit/SnapKit","description":"A Swift Autolayout DSL for iOS & OS X","topics":["auto","autolayout","snapkit","swift","xcode","dsl","cocoapods","constraints","layout","ui"],"created_at":"2014-06-05T21:13:40Z","pushed_at":"2024-07-07T13:58:39Z","stargazers_count":20001,"language":"Swift"},{"full_name":"PureLayout/PureLayout","description":"The ultimate API for iOS & OS X Auto Layout ‚Äî impressively simple, immensely powerful. Objective-C and Swift compatible.","topics":["purelayout","ios","autolayout"],"created_at":"2014-06-23T00:13:14Z","pushed_at":"2023-03-16T21:45:11Z","stargazers_count":7629,"language":"Objective-C"},{"full_name":"youngsoft/MyLinearLayout","description":"MyLayout is a powerful iOS UI framework implemented by Objective-C. It integrates the functions with Android Layout,iOS AutoLayout,SizeClass, HTML CSS float and flexbox and bootstrap. So you can use LinearLayout,RelativeLayout,FrameLayout,TableLayout,FlowLayout,FloatLayout,PathLayout,GridLayout,LayoutSizeClass to build your App Ëá™Âä®Â∏ÉÂ±Ä UIView UITableView UICollectionView RTL","topics":["autolayout","android","ios","uitableview","uicollectionview","constraints","rtl","grid-layout","layout","xib"],"created_at":"2015-06-13T17:26:16Z","pushed_at":"2024-04-16T15:01:55Z","stargazers_count":4408,"language":"Objective-C"},{"full_name":"freshOS/Stevia","description":":leaves: Concise Autolayout code","topics":["autolayout","swift","layout","stevia","constraints","view","interface","freshos","dsl","ios"],"created_at":"2015-06-15T09:41:48Z","pushed_at":"2024-11-12T16:47:04Z","stargazers_count":3382,"language":"Swift"},{"full_name":"wangshengjia/LeeGo","description":"Declarative, configurable & highly reusable UI development as making Lego bricks.","topics":["swift","component-driven","declarative-ui","autolayout","ios","uiview"],"created_at":"2016-01-19T19:35:30Z","pushed_at":"2018-08-02T11:12:28Z","stargazers_count":966,"language":"Swift"},{"full_name":"maxsokolov/TableKit","description":"Type-safe declarative table views.","topics":["swift","uitableview","uitableviewcell","generic","autolayout"],"created_at":"2015-11-08T12:26:18Z","pushed_at":"2023-04-19T09:59:15Z","stargazers_count":702,"language":"Ruby"},{"full_name":"onmyway133/EasyAnchor","description":"‚öìÔ∏è Declarative, extensible, powerful Auto Layout","topics":["ios","macos","autolayout","anchor","constraints"],"created_at":"2017-05-13T16:23:34Z","pushed_at":"2023-04-12T06:21:30Z","stargazers_count":458,"language":"Ruby"},{"full_name":"1amageek/Toolbar","description":"Awesome autolayout Toolbar. Toolbar is a library for iOS. You can easily create chat InputBar.","topics":["toolbar","autolayout","swift","ios","inputbar"],"created_at":"2017-04-20T10:12:47Z","pushed_at":"2021-01-14T08:42:42Z","stargazers_count":455,"language":"Swift"},{"full_name":"kean/Align","description":"Intuitive and powerful Auto Layout library","topics":["autolayout","constraints","anchors"],"created_at":"2017-11-07T17:44:34Z","pushed_at":"2024-10-12T17:24:48Z","stargazers_count":351,"language":"Swift"},{"full_name":"marty-suzuki/MisterFusion","description":"MisterFusion is Swift DSL for AutoLayout. It is the extremely clear, but concise syntax, in addition, can be used in both Swift and Objective-C. Support Safe Area and Size Class.","topics":["autolayout","swift","ios","iphone-x","safe-area","carthage","cocoapods","tvos","macos"],"created_at":"2015-11-13T07:06:54Z","pushed_at":"2019-09-30T16:55:35Z","stargazers_count":314,"language":"Ruby"},{"full_name":"huri000/QuickLayout","description":"Written in pure Swift, QuickLayout offers a simple and easy way to manage Auto Layout in code.","topics":["autolayout","autolayout-constraints","nslayoutconstraint","manage-constraints","swift","uiview","uiviewextension","interface-builder"],"created_at":"2017-11-19T21:01:05Z","pushed_at":"2021-10-17T11:57:14Z","stargazers_count":250,"language":"Ruby"},{"full_name":"muukii/MondrianLayout","description":"üèó A way to build AutoLayout rapidly than using InterfaceBuilder(XIB, Storyboard) in iOS.","topics":["autolayout","dsl","uikit","resultbuilder","swiftui","layout"],"created_at":"2021-06-13T11:32:32Z","pushed_at":"2022-09-02T03:49:36Z","stargazers_count":168,"language":"Objective-C"},{"full_name":"mergesort/Anchorman","description":"An autolayout library for the damn fine citizens of San Diego.","topics":["ios","autolayout"],"created_at":"2016-05-26T18:30:33Z","pushed_at":"2021-01-17T15:13:42Z","stargazers_count":80,"language":"Ruby"},{"full_name":"floriankrueger/Manuscript","description":"AutoLayoutKit in pure Swift.","topics":["swift","carthage","autolayout","tvos","ios","cocoapods","manuscript","uikit"],"created_at":"2015-04-24T06:14:20Z","pushed_at":"2017-04-19T12:53:29Z","stargazers_count":76,"language":"Swift"},{"full_name":"wordlessj/Bamboo","description":"Auto Layout (and manual layout) in one line.","topics":["auto","manual","layout","autolayout","swift","ios"],"created_at":"2016-10-05T06:50:42Z","pushed_at":"2018-10-05T09:01:40Z","stargazers_count":74,"language":"Objective-C"},{"full_name":"evan-liu/FormationLayout","description":"Yet Another Swift Auto Layout DSL","topics":["swift","autolayout"],"created_at":"2015-06-18T02:27:52Z","pushed_at":"2017-03-18T02:39:31Z","stargazers_count":51,"language":"Swift"},{"full_name":"amantaneja/PTEventView","description":"An Event View based on Apple's Event Detail View. Written in Swift 3. Supports ARC, Autolayout and editing via StoryBoard.","topics":["calendar","cocoapods","swift","apple-event","ibdesignable","cocoapod","cocoa-touch","autolayout","storyboard","pteventview"],"created_at":"2017-08-20T10:42:39Z","pushed_at":"2020-05-07T06:57:14Z","stargazers_count":35,"language":"Ruby"},{"full_name":"sp71/SnapLayout","description":"Concise Auto Layout API to chain programmatic constraints while easily updating existing constraints.","topics":["ios","constraint-programming","autolayout","pin","constraints"],"created_at":"2016-10-02T21:44:39Z","pushed_at":"2019-09-14T19:35:13Z","stargazers_count":11,"language":"Ruby"},{"full_name":"yonat/MiniLayout","description":"Minimal AutoLayout convenience layer. Program constraints succinctly. ‚ö†Ô∏è Moved into https://github.com/yonat/SweeterSwift","topics":["autolayout","swift","syntactic-sugar"],"created_at":"2016-02-20T08:03:30Z","pushed_at":"2019-06-21T11:19:01Z","stargazers_count":8,"language":"Ruby"},{"full_name":"daskioff/RKAutoLayout","description":"Easy Auto Layout","topics":["ios","swift","autolayout","autolayout-constraints"],"created_at":"2018-06-10T20:37:56Z","pushed_at":"2019-03-02T11:47:27Z","stargazers_count":2,"language":"Ruby"}],"frecuent_topics":{"autolayout":20,"swift":13,"ios":12,"constraints":6,"layout":5}}