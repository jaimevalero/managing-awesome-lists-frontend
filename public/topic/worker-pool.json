{"category_type":"topic","category_name":"worker-pool","repos_data":[{"full_name":"panjf2000/ants","description":"üêúüêúüêú ants is the most powerful and reliable pooling solution for Go.","topics":["goroutine-pool","goroutine","pool","go","worker-pool","ants"],"created_at":"2018-05-19T01:13:38Z","pushed_at":"2024-11-13T03:12:46Z","stargazers_count":13020,"language":"Go"},{"full_name":"hibiken/asynq","description":"Simple, reliable, and efficient distributed task queue in Go","topics":["task-queue","go","background-jobs","redis","asynchronous-tasks","worker-pool","golang"],"created_at":"2019-11-15T05:17:55Z","pushed_at":"2024-11-19T04:37:51Z","stargazers_count":10093,"language":"Go"},{"full_name":"andywer/threads.js","description":"üßµ Make web workers & worker threads as simple as a function call.","topics":["javascript","nodejs","thread-pool","web-worker","isomorphic-javascript","multithreading","worker-threads","worker-pool","typescript"],"created_at":"2015-08-25T20:07:57Z","pushed_at":"2024-06-19T16:53:00Z","stargazers_count":3076,"language":"JavaScript"},{"full_name":"alitto/pond","description":"üîò Minimalistic and High-performance goroutine worker pool written in Go","topics":["go","goroutine-pool","worker-pool","worker-pool-factory","golang","golang-library","pond","concurrency","high-performance"],"created_at":"2020-03-21T14:56:33Z","pushed_at":"2024-11-27T14:55:55Z","stargazers_count":1541,"language":"Go"},{"full_name":"gammazero/workerpool","description":"Concurrency limiting goroutine pool","topics":["worker-pool","concurrency"],"created_at":"2016-05-17T14:32:06Z","pushed_at":"2024-11-15T11:57:32Z","stargazers_count":1337,"language":"Go"},{"full_name":"ankorstore/yokai","description":"Simple, modular, and observable Go framework for backend applications.","topics":["framework","go","golang","grpc-server","http-server","modular","observability","open-telemetry","prometheus","worker-pool"],"created_at":"2024-01-10T10:39:53Z","pushed_at":"2024-11-18T12:50:05Z","stargazers_count":488,"language":"Go"},{"full_name":"vardius/worker-pool","description":"Go simple async worker pool","topics":["worker-pool","async"],"created_at":"2017-10-04T09:18:31Z","pushed_at":"2021-01-17T02:27:13Z","stargazers_count":92,"language":"Go"},{"full_name":"hamed-yousefi/gowl","description":"Gowl is a process management and process monitoring tool at once. An infinite worker pool gives you the ability to control the pool and processes and monitor their status.","topics":["golang","go","pooling","pool","worker-pool","monitor","monitoring","monitoring-tool","concurrent-programming","concurrency"],"created_at":"2021-04-12T19:15:53Z","pushed_at":"2023-10-19T07:56:42Z","stargazers_count":69,"language":"Go"}],"frecuent_topics":{"worker-pool":8,"go":5,"golang":4,"concurrency":3,"goroutine-pool":2}}