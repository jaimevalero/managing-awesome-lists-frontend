{"category_type":"topic","category_name":"circuit-breaker-pattern","repos_data":[{"full_name":"App-vNext/Polly","description":"Polly is a .NET resilience and transient-fault-handling library that allows developers to express policies such as Retry, Circuit Breaker, Timeout, Bulkhead Isolation, and Fallback in a fluent and thread-safe manner. From version 6.0.1, Polly targets .NET Standard 1.1 and 2.0+.","topics":["circuit-breaker","circuit-breaker-pattern","resilience","resiliency-patterns","retry-strategies","dotnet","fault-handler","transient-fault-handling"],"created_at":"2013-05-05T04:40:04Z","pushed_at":"2024-01-27T19:14:01Z","stargazers_count":12706,"language":"C#"},{"full_name":"cep21/circuit","description":"An efficient and feature complete Hystrix like Go implementation of the circuit breaker pattern.","topics":["circuit","hystrix","circuit-breaker-pattern","slo"],"created_at":"2017-12-23T22:17:43Z","pushed_at":"2024-01-09T22:25:53Z","stargazers_count":719,"language":"Makefile"}],"frecuent_topics":{"circuit-breaker-pattern":2,"circuit-breaker":1,"resilience":1,"resiliency-patterns":1,"retry-strategies":1}}