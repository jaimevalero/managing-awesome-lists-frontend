{"category_type":"topic","category_name":"text-processing","repos_data":[{"full_name":"pyparsing/pyparsing","description":"Python library for creating PEG parsers","topics":["python","python2","python3","python-2","python-3","parser-combinators","parsing-expression-grammar","parsing","parsing-library","text-processing"],"created_at":"2017-05-14T18:07:01Z","pushed_at":"2024-11-25T14:52:53Z","stargazers_count":2240,"language":"Python"},{"full_name":"derek73/python-nameparser","description":"A simple Python module for parsing human names into their individual components ","topics":["python","text-processing","text-parser","python-module"],"created_at":"2014-04-02T03:31:21Z","pushed_at":"2024-05-28T06:40:23Z","stargazers_count":657,"language":"Python"},{"full_name":"abadojack/whatlanggo","description":"Natural language detection library for Go","topics":["language","go","nlp","text-processing"],"created_at":"2017-02-20T17:32:01Z","pushed_at":"2023-03-28T08:08:05Z","stargazers_count":644,"language":"Go"},{"full_name":"s3nh/text-detector","description":"Tool which allow you to detect and translate text.","topics":["craft","crnn","text","text-processing","pytorch","ocr-recognition","deep-learning","nlp","recognition","text-recognition"],"created_at":"2019-06-26T18:36:53Z","pushed_at":"2019-09-10T12:42:36Z","stargazers_count":180,"language":"Python"},{"full_name":"proycon/colibri-core","description":"Colibri core is an NLP tool as well as a C++ and Python library for working with basic linguistic constructions such as n-grams and skipgrams (i.e patterns with one or more gaps, either of fixed or dynamic size) in a quick and memory-efficient way. At the core is the tool ``colibri-patternmodeller`` whi      ch allows you to build, view, manipulate and query pattern models. ","topics":["c-plus-plus","python","nlp","ngrams","skipgram","ngram","corpus","linguistics","library","text-processing"],"created_at":"2013-09-21T14:12:05Z","pushed_at":"2024-11-25T14:31:35Z","stargazers_count":124,"language":"Python"},{"full_name":"proycon/python-ucto","description":"This is a Python binding to the tokenizer Ucto. Tokenisation is one of the first step in almost any Natural Language Processing task, yet it is not always as trivial a task as it appears to be. This binding makes the power of the ucto tokeniser available to Python. Ucto itself is regular-expression based, extensible, and advanced tokeniser written in C++ (http://ilk.uvt.nl/ucto).","topics":["nlp","computational-linguistics","python","tokenizer","text-processing","folia","nlp-library"],"created_at":"2014-05-21T17:28:45Z","pushed_at":"2024-09-12T14:01:52Z","stargazers_count":29,"language":"Python"},{"full_name":"alinapetukhova/textcl","description":"Text preprocessing package for use in NLP tasks https://pypi.org/project/textcl/","topics":["nlp","text-cleaning","text-processing","outlier-detection"],"created_at":"2021-03-11T16:19:57Z","pushed_at":"2024-08-09T16:08:59Z","stargazers_count":11,"language":"Python"}],"frecuent_topics":{"text-processing":7,"nlp":5,"python":4,"python2":1,"python3":1}}